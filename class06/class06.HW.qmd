---
title: "Class06.HW"
author: "Sharlene Yang"
format: pdf
---

## Class 06 HW

>Q6. How would you generalize the original code above to work with any set of input protein structures?

```{r}
# Can you improve this analysis code? 
library(bio3d) 
s1 <- read.pdb("4AKE")  # kinase with drug 
s2 <- read.pdb("1AKE")  # kinase no drug 
s3 <- read.pdb("1E4Y")  # kinase with drug 

s1.chainA <- trim.pdb(s1, chain="A", elety="CA") 
s2.chainA <- trim.pdb(s2, chain="A", elety="CA") 
s3.chainA <- trim.pdb(s3, chain="A", elety="CA") 

s1.b <- s1.chainA$atom$b 
s2.b <- s2.chainA$atom$b 
s3.b <- s3.chainA$atom$b

plotb3(s1.b, sse=s1.chainA, typ="l", ylab="Bfactor") 
plotb3(s2.b, sse=s2.chainA, typ="l", ylab="Bfactor") 
plotb3(s3.b, sse=s3.chainA, typ="l", ylab="Bfactor")
```



The generalized function:
```{r}
library(bio3d)

plotkinase <- function(x) {
#This function takes x, where x is the accession number
#This function reads the accession number into the database
#The output is s which reads the file for the inserted accession number
  s <- read.pdb(x)
  
#This function takes the s variable as the input 
#This function produces a smaller PDB object, containing a subset of atoms as its output
#The output is chainA which is the shorter PDB of the accession number
  chainA <- trim.pdb(s, chain="A", elety = "CA")
  
#The input of this function will be chainA
#The function is used to access the variable "b" in the list of "atoms" in chainA 
#The output is s.b
  s.b <- chainA$atom$b
  
#The inputs for this function are s.b and chainA
#This function plots the data onto a graph
#The output will be the graph
  plotb3(s.b, sse= chainA, typ="l", ylab="Bfactor")
}

```

```{r}
library(bio3d) 
plotkinase("4AKE")
plotkinase("1AKE")
plotkinase("1E4Y")
```

