---
title: "Class 13  RNA-Seq analysis mini-project"
author: "Sharlene Yang"
format: pdf
---

## Pathway Analysis from RNA-Seq Results

# Section 1: Differential Expression Analysis

```{r}
#I message: False
library(DESeq2)
```

Let's load our files

```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"

# Import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)
```


> Q. Complete the code below to remove the troublesome first column from countData

```{r}
# Import countdata
countData = read.csv(countFile, row.names=1)
head(countData)

```



>Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).

We need to make the countData and colData match up. To do this, we will remove the first odd column in `countData`

```{r}
# Note we need to remove the odd first $length col
countData <- as.matrix(countData[,-1])
head(countData)
```

```{r}
# Filter count data where you have 0 read count across all samples.
countData = countData[rowSums(countData) > 0, ]
head(countData)
```

```{r}
nrow(countData)
```


# Running DESeq2



```{r}
dds = DESeqDataSetFromMatrix(countData=countData,
                             colData=colData,
                             design= ~condition)

```

```{r}
dds = DESeq(dds)
```

```{r}
res <- results(dds)
```

```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```

> Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```


# Volcano Plot

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

> Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```


# Adding gene annotations
> Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")
columns(org.Hs.eg.db)

```

For symbol:

```{r}
res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column= "SYMBOL",
                    multiVals="first")

```

For entrez:

```{r}
res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

```

For genename:

```{r}
res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype= "ENSEMBL",
                    column= "GENENAME",
                    multiVals="first")

```

```{r}
head(res, 10)
```

> Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```


## Section 2 Pathway Analysis

```{r}
library(pathview)
```

```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

The main gage() function requires a named vector of fold changes, where the names of the values are the Entrez gene IDs.

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

Let's run the gage pathway analysis to get results:

```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```


Let's see what is returned from `gage()`

```{r}
attributes(keggres)
```

Let's look at the first LESS pathways

```{r}
head(keggres$less)
```

To make a pathway plot with the RNA-Seq expression results shown in color, we will use `pathview()`

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

![](hsa04110.pathview.png)

You can play with the other input arguments to pathview() to change the display in various ways including generating a PDF graph. For example

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```


Let's find the top 5 upregulated pathways

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

Let's pass these IDs in keggresids to the pathview() function to draw plots for all the top 5 pathways.

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")

```

![HSA04640](hsa04640.pathview.png)
![HSA04630](hsa04630.pathview.png)

![HSA00140](hsa00140.pathview.png)

![HSA04142](hsa04142.pathview.png)

![HSA04330](hsa04330.pathview.png)

